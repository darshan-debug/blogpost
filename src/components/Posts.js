import React, { Component } from 'react';
import {connect} from 'react-redux';//to connect comonets with redux->store..that was provided by PROVIDER component
import {fetchPosts} from '../actions/postactions.js';//to call action ....FETCH_POST
import PropTypes from 'prop-types';


 class Posts extends Component {
     // the post will come from redux,..ie from the application state,from the store
     
     componentWillMount()
     {
         this.props.fetchPosts();
     }

     componentWillReceiveProps(nextProps)//when it receives any property from state this will run
     { if(nextProps.newPost)// if the newpost exists....ie if a newpost is generated by user
            { //we will add it to our 'posts' array
              //to add it to the starting of the array we do 'unshift'.......as 'push' will add it at the END
                this.props.posts.unshift(nextProps.newPost);
                console.log('including...new post ');
                //as it is not a DB so id of any newPost will be always 101 ONLY
            }
     }
   
     render() {
        //giving HTML structure to all the posts
        const postItems=this.props.posts.map(post=>
        (   <div key={post.id}>
                <h3>{post.title}</h3>
                <p>{post.body}</p>
            </div>
        ));
        console.log('rendering posts.......from post component');
        return (
            <div>
               <h1>Posts</h1>
               {postItems} 
            </div>
        ) 
    }
}
//for below func.....see index.js...posts means that posts in index.js,which we r exporting
 const mapStateToProps=state=>
 ({/////////////state on RHS...refers to the store
      posts:state.posts.items,
// posts on LHS is a property
    newPost:state.posts.item
 });
 /////////
 Posts.propTypes=
 {  fetchPosts:PropTypes.func.isRequired,
    posts:PropTypes.array.isRequired,
    //fetchPosts,posts are properties
    newPost:PropTypes.object
 };

export default connect(mapStateToProps,{fetchPosts})(Posts);
// mapStateToProps maps our state,to our properties
//remember.... fetchPosts func is actually a property